// <auto-generated />
using System;
using HastaRandevu.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HastaRandevu.Data.Migrations
{
    [DbContext(typeof(HastaRandevuDbContext))]
    partial class HastaRandevuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoktorKurum", b =>
                {
                    b.Property<int>("DoktorlarId")
                        .HasColumnType("int");

                    b.Property<int>("KurumlarId")
                        .HasColumnType("int");

                    b.HasKey("DoktorlarId", "KurumlarId");

                    b.HasIndex("KurumlarId");

                    b.ToTable("DoktorKurum");
                });

            modelBuilder.Entity("HastaRandevu.Entity.Concrete.Brans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BransAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 8, 12, 21, 37, 59, 94, DateTimeKind.Local).AddTicks(9875));

                    b.HasKey("Id");

                    b.HasIndex("BransAdi")
                        .IsUnique();

                    b.ToTable("Branslar");
                });

            modelBuilder.Entity("HastaRandevu.Entity.Concrete.Doktor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BransId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 8, 12, 21, 37, 59, 95, DateTimeKind.Local).AddTicks(1287));

                    b.Property<string>("DoktorAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DoktorSoyadi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BransId");

                    b.ToTable("Doktorlar");
                });

            modelBuilder.Entity("HastaRandevu.Entity.Concrete.Hasta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 8, 12, 21, 37, 59, 95, DateTimeKind.Local).AddTicks(2508));

                    b.Property<string>("HastaAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HastaSoyadi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Hastalar");
                });

            modelBuilder.Entity("HastaRandevu.Entity.Concrete.Kurum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 8, 12, 21, 37, 59, 95, DateTimeKind.Local).AddTicks(3563));

                    b.Property<string>("KurumAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("KurumAdi")
                        .IsUnique();

                    b.ToTable("Kurumlar");
                });

            modelBuilder.Entity("DoktorKurum", b =>
                {
                    b.HasOne("HastaRandevu.Entity.Concrete.Doktor", null)
                        .WithMany()
                        .HasForeignKey("DoktorlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HastaRandevu.Entity.Concrete.Kurum", null)
                        .WithMany()
                        .HasForeignKey("KurumlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HastaRandevu.Entity.Concrete.Doktor", b =>
                {
                    b.HasOne("HastaRandevu.Entity.Concrete.Brans", "DoktorBransi")
                        .WithMany("Doktorlar")
                        .HasForeignKey("BransId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoktorBransi");
                });

            modelBuilder.Entity("HastaRandevu.Entity.Concrete.Brans", b =>
                {
                    b.Navigation("Doktorlar");
                });
#pragma warning restore 612, 618
        }
    }
}
